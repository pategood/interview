
js为什么单线程?
  因为浏览器是多线程的,为了防止js操作dom时冲突

  js的异步操作是通过事件轮询来实现的 

  事件轮询(event loop)的核心是回调函数



  注意:
    在浏览器环境中，有JS 引擎线程和渲染线程，且两个线程互斥。
    Node环境中，只有JS 线程。


event loop:

  所有同步任务都在主线程中执行,任务执行时会产生 堆 和 栈(执行栈)

任务队列"（task queue）分为两种,
(microtask queue微任务队列    macrotask queue宏任务队列) 


一旦执行栈中的同步任务执行完毕,就会去读取任务队列中的微任务队列,
  执行微任务队列中的任务,直到清空微任务任务队列
  清空微任务队列后再去执行宏任务队列

  注意:宏任务中的执行顺序不一定按照插入顺序执行,因为可能setTimeout还没到执行事件




宏任务主要有：
script(整体代码)、setTimeout、setInterval、I/O、UI 交互事件、
            postMessage、MessageChannel、setImmediate(Node.js 环境)。
  
微任务主要有：
Promise.then、 MutationObserver、 process.nextTick(Node.js 环境)。