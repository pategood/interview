　　1.VUE2.0通过Object.defineProperty来劫持对象属性的getter和setter操作，当数据发生变化时发出通知

　　2.VUE3.0通过Proxy来劫持数据，当数据发生变化时发出通知


proxy的优点: 
  不需要显示的调用 
    (react则需要通过setState来进行显示调用,vue通过数据劫持+发布订阅)

  直接监听对象而非属性,减少了diff操作,减少性能损耗

  直接监听数组的变化

  vue2使用object.defineProperty  中的getter和setter实现数据监听

  vue3使用proxy进行监听,用到是时才监听   按需监听

  监听的是一个对象   ,   改进了vue2无法对数组的setter的监听

  Proxy 有多达 13 种拦截方法 比defineProperty多

  Proxy返回一个新对象，可以只操作新对象达到目的，而Object.defineProperty只能遍历对象属性直接修改（需要用深拷贝进行修改）




  definedProperty缺点:
    不能直接监控数组，而是间接重写Array.prototype上的数组方法,比如push、unshfit…属性,监听数组原型上的这些方法,进而实现更新

    如果被监听对象在执行监听之后又重新添加了属性,这些属性值则无法监听到 