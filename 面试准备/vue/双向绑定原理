原理: 通过数据劫持结合发布者-订阅者模式的方式来实现的，

vue2是通过Object.defineProperty()来实现数据劫持的。

  利用Object.defineProperty()来修改数据的get和set
    设置监听器Observer，用来监听所有属性
    属性变化后需要告诉订阅者Watcher看是否需要更新
    订阅者是有很多个，所以我们需要有一个消息订阅器Dep来专门收集这些订阅者，
    然后在监听器Observer和订阅者Watcher之间进行统一管理的。

    指令解析器Compile，对每个节点元素进行扫描和解析，将相关指令对应初始化成一个订阅者Watcher，并替换模板数据或者绑定相应的函数，
    此时当订阅者Watcher接收到相应属性的变化，就会执行对应的更新函数，从而更新视图


1.实现一个监听器Observer，用来劫持并监听所有属性，如果有变动的，就通知订阅者。

2.实现一个订阅者Watcher，可以收到属性的变化通知并执行相应的函数，从而更新视图。

3.实现一个解析器Compile，可以扫描和解析每个节点的相关指令，并根据初始化模板数据以及初始化相应的订阅器。

https://images2015.cnblogs.com/blog/938664/201705/938664-20170522225458132-1434604303.png