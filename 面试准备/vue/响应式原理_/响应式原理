改变数据的时候，视图会跟着更新


每个组件只有一个watcher

侦测数据的变化
收集视图依赖了哪些数据
数据变化时，自动“通知”需要更新的视图部分，并进行更新

专业术语:

数据劫持 / 数据代理
依赖收集         

发布订阅模式

在getter中收集依赖,数据的属性发生变化,通知那些曾经使用了该数据的地方  
    收集那些地方  收集依赖才能知道哪些地方依赖我的数据
在setter中触发依赖  ,根据数据变化,来更新视图

订阅者 Dep和观察者 Watcher
  订阅者Dep时专门用来存储依赖的
    它用来收集依赖、删除依赖和向依赖发送消息等

可以把Watcher理解成一个中介的角色，数据发生变化时通知它，然后它再通知其他地方

 addSub 方法可以在目前的 Dep 对象中增加一个 Watcher 的订阅操作；
 notify 方法通知目前 Dep 对象的 subs 中的所有 Watcher 对象触发更新操作。
 
需要依赖收集的时候调用 addSub，当需要派发更新的时候调用 notify









