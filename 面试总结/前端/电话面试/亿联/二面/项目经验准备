router和route的区别


路由传参


哈希路由区别
  


cookie localStorage sessionStorage
  第一次访问网站，浏览器发出请求，服务器响应请求会携带cookie过来
  第二次发起请求时会携带cookie过去,服务器通过cookie辨别用户

    可以设置过期时间expires:
        如果不设置,则表示这个cookie是浏览器会话期间，关闭浏览器窗口，cookie就会消失。
        如果设置了过期时间,浏览器会把cookie保存到硬盘,关闭浏览器后仍然有效
    数据小很多浏览器限制cookie个数    
      只能保存字符串类型，不安全会被篡改
      不可以跨浏览器调用
      原生api不好用


  localStorage 
    除非手动清除,否则永久 保存
    保存了localStorage ，当前域名的所以页面都有效
      不管你在域名下的什么路径
    换个浏览器就不行了

  sessionStorage
    仅在当前会话下有效，关闭页面或浏览器后被清除
    刷新后页面上数据依然存在

只在客户端（即浏览器）中保存，不参与和服务器的通信



动画过渡  


vuex
  状态管理工具    多个组件共享数据或者是跨组件传递数据时  使用
  State   状态  存储变量和数据的 
  getter   从state中获取数据的，相当于vue的计算属性
  mutation  提交更新数据的方法   必须是同步的 
    类似于vue的methods，不同的是参数1必须是state 
  action  异步的   
    调用mutation的方法
  modules   模块化的vuex  
    可以让每一个模块 都有 State mutation action等

　　dispatch：异步操作，写法： this.$store.dispatch('actions方法名',值)
    commit：同步操作，写法：this.$store.commit('mutations方法名',值)


  Vuex中状态是对象时，使用时要注意什么？

    答:对象是引用类型，复制后改变属性还是会影响原始数据，这样会改变state里面的状态，是不允许，所以先用深度克隆复制对象，再修改。

  vuex的数据刷新会丢失吗
    会丢失
    存到缓存里面

组件通信
  vuex 
  数据总线

  $parent child 
  ref 

  provide inject

  $emit v-on



跨域问题
  跨域问题本身是 浏览器的一种安全机制  
    限制了 协议域名端口号不同的访问

  解决：
    1.后端 配置白名单 
      配置Access-control-allow-origin,设置成*号 或者指定域名
      （cors）
    2.前端配置代理 
      webpack配置代理
      自己启动一个服务器负责转发请求
      使用nginx
    3.

  跨域问题本身是浏览器的安全策略
    代理使用中间层,帮你转发,域名改成一样的,
    返回数据时也经过代理,将地址换回去


封装请求


封装缓存
  



封装组件问题
  一般封装卡片组件 ，下拉列表组件，轮播气泡组件

  弹出层二次封装



瀑布流列表
  等宽不等高  拆分成两个 列表  左边放数组下表为偶数的元素，右边放下标为期数的元素

  缺点 ： 下拉过多会导致最底部左边元素比右边元素长


